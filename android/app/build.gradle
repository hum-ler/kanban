def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def uploadProperties = new Properties()
def uploadPropertiesFile = rootProject.file('upload.properties')
if (uploadPropertiesFile.exists()) {
    uploadProperties.load(new FileInputStream(uploadPropertiesFile))
}

def debugProperties = new Properties()
def debugPropertiesFile = rootProject.file('debug.properties')
if (debugPropertiesFile.exists()) {
    debugProperties.load(new FileInputStream(debugPropertiesFile))
}

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "sg.per.hum.kanban"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        upload {
            keyAlias uploadProperties['keyAlias']
            keyPassword uploadProperties['keyPassword']
            storeFile uploadProperties['storeFile'] ? file(uploadProperties['storeFile']) : null
            storePassword uploadProperties['storePassword']
        }

        debug {
            keyAlias debugProperties['keyAlias']
            keyPassword debugProperties['keyPassword']
            storeFile debugProperties['storeFile'] ? file(debugProperties['storeFile']) : null
            storePassword debugProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.upload
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:27.1.0')
}
